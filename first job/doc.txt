目标：
为增加二级分类提供分类候选集（人工筛选），提高推荐效果
1. 提取目前的几十万条有分类的数据中（recall接近100%）
2. 对于每个分类，提取每篇文章的tfidf
3. 汇总top 1000的tdidf，按照分类给出

实现方式：
start.py程序入口
链接mongo，取出category，matrx数据，为comp对象提供数据
1，创建字典
2，更新tfidf
3，输出到文件
class comp:
	creatWord() 用word.txt文件初始化wordnum字典{word:tfidf}
	update(category,matrx) 通过传入文章的分类，和特征向量(压缩后的矩阵)更新dirctory字典{category:tfidf},tfidf字典{word:tfidf}
	writeFile()将得到的数据处理后输出到对应的分类文件

遇见问题：
1，数据量较大，需要较长的时间跑数据，过程中不知道进展如何
解决：过程中打印进度....
2，网络中断，程序没有进行到输出阶段，没有任何结果输出
解决：一定进度后进行中间结果输出（可供参考）
3，异常出现后程序终止，后续数据无法正常处理
解决：异常处理（直接抛出，不做处理），数据量较大单个数据对总体数据影响较小


总结：
完成任务前没有问清楚需求，和所需要处理的数据类型导致中途不断出现代码重写的问题，但是在整个过程中，更好的了解python，mongo等技术。
